##Licensed under Gameloft IsoNet Community
## Written by Intra107 @ copyright 2018
import cv2
import matplotlib.pyplot as plt
import numpy as np
#test_image = cv2.imread('test_image.jpg')
#copy_image = np.copy(test_image)

def refion(image):
    height=image.shape[0]
    polygons=np.array([[(200,height),(1100,height),(550,250)]])
    mask=np.zeros_like(image)
    cv2.fillPoly(mask,polygons,255)
    masked_image=cv2.bitwise_and(image,mask)
    return masked_image

def displaylines(image,lines):
    line_image=np.zeros_like(image)
    if lines is not None:
        for line in lines:
            x1,y1,x2,y2=line.reshape(4)
            cv2.line(line_image,(x1,y1),(x2,y2),(255,0,0),10)
    return line_image

def make_coordinate(image,line_paramater):
    slope,intercept=line_paramater
    y1=image.shape[0]
    y2=int(y1*(3/5))
    x1=int((y1-intercept)/slope)
    x2=int((y2-intercept)/slope)
    return np.array([x1,y1,x2,y2])

def average_slope_intercept(image, lines):
    leftfit=[]
    rightfit=[]
    for line in lines:
        x1,y1,x2,y2=line.reshape(4)
        parameter=np.polyfit((x1,x2),(y1,y2),1)
        slope=parameter[0]
        intercept=parameter[1]
        if slope < 0:
            leftfit.append((slope,intercept))
        else:
            rightfit.append((slope,intercept))
    leftfitavg=np.average(leftfit,axis=0)
    rightfitavg=np.average(rightfit,axis=0)
    leftline=make_coordinate(image,leftfitavg)
    rightline=make_coordinate(image,rightfitavg)
    return np.array([leftline,rightline])

#gray=cv2.cvtColor(copy_image,cv2.COLOR_RGB2GRAY)
#blur = cv2.GaussianBlur(gray,(5,5),0)
#canny = cv2.Canny(blur,50,150)
#cropped_image=refion(canny)
#lines=cv2.HoughLinesP(cropped_image,2,np.pi/180,100,np.array([]),minLineLength=40,maxLineGap=5)
#averaged_lines=average_slope_intercept(copy_image,lines)
#line_image=displaylines(copy_image,averaged_lines)
#combo_image=cv2.addWeighted(copy_image,0.8,line_image,1,1)
#cv2.imshow('test_image',combo_image)
#cv2.waitKey(0)
#End of code

cap=cv2.VideoCapture("test2.mp4")
while(cap.isOpened()):
    _,frame = cap.read()
    copy_image = np.copy(frame)
    gray=cv2.cvtColor(copy_image,cv2.COLOR_RGB2GRAY)
    blur = cv2.GaussianBlur(gray,(5,5),0)
    canny = cv2.Canny(blur, 50, 150)
    cropped_image = refion(canny)
    lines = cv2.HoughLinesP(cropped_image, 2, np.pi / 180, 100, np.array([]), minLineLength=40, maxLineGap=5)
    averaged_lines = average_slope_intercept(frame, lines)
    line_image = displaylines(frame, averaged_lines)
    combo_image = cv2.addWeighted(frame, 0.8, line_image, 1, 1)
    cv2.imshow('test_image', combo_image)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()